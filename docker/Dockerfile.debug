# AIMC MineDojo Docker 镜像 - 调试版本
# 只构建到 Python 依赖安装，不包含 MineCLIP 和 MC 编译
# 用于进入容器手动调试

FROM ubuntu:20.04

# 设置非交互模式
ENV DEBIAN_FRONTEND=noninteractive

# [重要] 如果在企业网络环境中，需要配置代理或使用国内镜像源
# 取消下面的注释来使用阿里云镜像源
RUN sed -i 's|http://archive.ubuntu.com|http://mirrors.aliyun.com|g' /etc/apt/sources.list && \
    sed -i 's|http://security.ubuntu.com|http://mirrors.aliyun.com|g' /etc/apt/sources.list

# 更新系统并安装基础依赖
RUN apt-get update && \
    apt-get install -y \
    openjdk-8-jdk \
    wget \
    curl \
    git \
    build-essential \
    ca-certificates \
    libgl1-mesa-glx \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    && rm -rf /var/lib/apt/lists/*

# 安装 Miniconda
RUN wget --no-check-certificate https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O /tmp/miniconda.sh && \
    bash /tmp/miniconda.sh -b -p /opt/conda && \
    rm /tmp/miniconda.sh

# 配置环境变量
ENV PATH="/opt/conda/bin:${PATH}"
ENV JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
ENV MINEDOJO_HEADLESS=1

# 配置 conda 和 pip 使用国内镜像源（可选）
RUN conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/ && \
    conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/ && \
    conda config --set show_channel_urls yes

# 接受 Conda 服务条款并创建 minedojo-x86 环境
RUN conda tos accept --override-channels --channel https://repo.anaconda.com/pkgs/main && \
    conda tos accept --override-channels --channel https://repo.anaconda.com/pkgs/r && \
    conda create -n minedojo-x86 python=3.9 -y && \
    conda init bash && \
    echo "conda activate minedojo-x86" >> /root/.bashrc

# 复制项目文件
COPY requirements.txt /tmp/requirements.txt
COPY build_local_cache.zip /root/build_local_cache.zip
RUN unzip /root/build_local_cache.zip -d /root/

# 安装 Python 依赖
SHELL ["/bin/bash", "-c"]
RUN source /opt/conda/etc/profile.d/conda.sh && \
    conda activate minedojo-x86 && \
    pip install "pip<24.1" "setuptools<58" "wheel<0.38.0" && \
    pip install minedojo && \
    pip install -r /tmp/requirements.txt && \
    rm /tmp/requirements.txt

COPY docker/mc_config.patch /tmp/mc_config.patch

RUN cd /opt/conda/envs/minedojo-x86/lib/python3.9/site-packages/minedojo/sim/Malmo/Minecraft
# ==================== 调试版本到此结束 ====================
# 以下步骤可以在容器内手动执行测试

# 设置工作目录
WORKDIR /workspace

# 打印提示信息
RUN echo '========================================' && \
    echo '🐛 AIMC 调试镜像构建完成' && \
    echo '========================================' && \
    echo '' && \
    echo '✅ 已完成的步骤:' && \
    echo '  - Ubuntu 20.04 基础环境' && \
    echo '  - OpenJDK 8' && \
    echo '  - Miniconda + Python 3.9' && \
    echo '  - MineDojo 及依赖包' && \
    echo '' && \
    echo '⏳ 待手动执行的步骤:' && \
    echo '  1. MineCLIP 安装: bash /root/install_mineclip.sh' && \
    echo '  2. MixinGradle: cd /opt/hotfix && git clone https://github.com/verityw/MixinGradle-dcfaf61.git' && \
    echo '  3. MC 编译诊断: bash /root/fix_mixingradle.sh' && \
    echo '  4. MC 编译验证: bash /root/verify_mc_build.sh' && \
    echo '' && \
    echo '📍 MineDojo 路径:' && \
    echo '  /opt/conda/envs/minedojo-x86/lib/python3.9/site-packages/minedojo/sim/Malmo/Minecraft' && \
    echo '' && \
    echo '========================================' && \
    echo ''

# 默认激活 minedojo-x86 环境
ENTRYPOINT ["/bin/bash", "-c", "source /opt/conda/etc/profile.d/conda.sh && conda activate minedojo-x86 && exec /bin/bash"]

